version: "3.7"

services:
  client:
    image: node:14-alpine
    command: sh -c "yarn install && yarn start"
    ports:
      - 3000:3000
    working_dir: /app
    volumes:
      - ./client:/app

  api-gateway:
    restart: always
    build: ./api-gateway
    command: sh -c "yarn install && yarn start:dev & firebase emulators:start --import=./firebase-emulator-data --export-on-exit"
    ports:
      - 5000:5000
      - 9005:9005
      - 9098:9098
      - 9099:9099
    volumes:
      - ./api-gateway:/app
    environment:
      FIREBASE_AUTH_EMULATOR_HOST: localhost:9099
      NODE_ENV: development
      PORT: 5000

  collaboration-service:
    restart: always
    image: node:14-alpine
    command: sh -c "yarn install && yarn start:dev"
    working_dir: /app
    volumes:
      - ./collaboration-service:/app
    environment:
      NODE_ENV: development

  practice-service:
    restart: always
    image: node:14-alpine
    command: sh -c "yarn install && yarn run seed && yarn start:dev"
    working_dir: /app
    volumes:
      - ./practice-service:/app
    env_file: ./practice-service/.env

  practice-service-postgres:
    restart: always
    env_file: ./practice-service/.env
    image: postgres:12
    volumes:
      - practice-service-postgres-dev:/var/lib/postgresql/data
    ports:
      - 5432:5432

  code-runner-service:
    restart: always
    image: node:14-alpine
    command: sh -c "yarn install && yarn start:dev"
    working_dir: /app
    volumes:
      - ./code-runner-service:/app

  nats:
    restart: always
    entrypoint: "/nats-server -c nats-server.conf -DV"
    image: nats
    logging:
      driver: none
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"

volumes:
  practice-service-postgres-dev:
